*symfony.txt* Improve your Symfony project in vim

Version: 0.04
Author: soh kitahara
URL: http://github.com/soh335/vim-symfony/tree/master
==============================================================================
INTRODUCTION                                            *symfony-introduction*

When you work with symfony, open various files many times. For example action
files, view files and model files. If you repeat to edit and quiet, take time.
So symfony.vim provide some convenient commands to open file.
==============================================================================
COMMANDS                                                    *symfony-commands*

                                                              *symfony-:Sview*
:Sview                If you edit action.class.php and call this method, find
                      function executeXXX() and move to 
                      template/xxxSuucess.php.

:Sview error          If an argument is error, move to template/xxxError.php.

:Sview [{name}]       You can pass arguments are apps name, module name and
                      file name.
                      Ex: :Sview xxx aaa bbbSuccess.php, open apps/xxx/module/
                      aaa/templates/bbbSuccess.php

                                                             *symfony-:SSview*
:SSview               Execute split and call |:Sview|

                                                             *symfony-:SVview*
:SVview               Execute vsplit and call |:Sview|

                                                            *symfony-:Saction*
:Saction              If you edit templates/xxxSuucess.php file and call this 
                      method, find xxxAcrion.class.php or action.class.php
                      and move function executeXXX() line.

:Saction [{name}]     You can pass arguments are apps name, module name and
                      file name.
                      Ex: :Saction xxx aaa, open apps/xxx/module/aaa/
                      actions.class.php.
                      Ex: :Saction xxx aaa bbb, open apps/xxx/module/aaa/
                      bbbAction.class.php

                                                           *symfony-:SSaction*
:SSaction             Execute split and call |:Saction|

                                                           *symfony-:SVaction*
:SVaction             Execute vsplit and call |:Saction|

                                                             *symfony-:Smodel*
:Smodel               You call this method, judges from word under cursor.
                      If your cursor under word is XxxPeer, open lib/model/
                      XxxPeer.php

:Smodel [{name}]      You can pass argument.
                      Ex: :Smodel AaaPeer.php, open lib/model/AaaPeer.php

                                                            *symfony-:SSmodel*
:SSmodel              Execute split and call |:Smodel|

                                                            *symfony-:SVmodel*
:SVmodel              Execute vsplit and call |:Smodel|

                                                              *symfony-:Sform*
:Sform                You call this method, judges from word under cursor.

:Sform [{name}]       You can pass argument.

                                                             *symfony-:SSform*
:SSform               Execute split and call |:Sform|

                                                             *symfony-:SVform*
:SVform               Execute vsplit and call |:Sform|

                                                            *symfony-:Shelper*
:Shelper              You call this method, judges from word under cursor.

:Shelper [{name}]     You can pass argument.
                      Ex: :Shelper xxxHelper.php open lib/model/xxxHelper.php

                                                           *symfony-:SShelper*
:SShelper             Execute split and call |:Shelper|

                                                           *symfony-:SVhelper*
:SVhelper             Execute vsplit and call |:Shelper|

                                                           *symfony-:Spartial*
:Spartial             If present cursor line is include_partial('...') and
                      call this method, open partial file.

:[range]Spartial      see |symfony-refactoring|

                                                          *symfony-:SSpartial*
:SSpartial            Execute split and call |:Spartial|

                                                          *symfony-:SVpartial*
:SVpartial            Execute vsplit and call |:Spartial|

                                                         *symfony-:Scomponent*
:Scomponent           If present cursor line is include_component('...') and
                      call this method, open component file.

                                                        *symfony-:SScomponent*
:SScomponent          Execute split and call |:Scomponent|

                                                        *symfony-:SVcomponent*
:SVcomponent          Execute vsplit and call |:Scomponent|

                                                            *symfony-:Symfony*
:Symfony [{name}]     execute symfony task.

                                                               *symfony-:Slib*
:Slib [{name}]        Open lib file.

                                                              *symfony-:SSlib*
:SSlib                Execute split and call |:Slib|

                                                              *symfony-:SVlib*
:SVlib                Execute vsplit and call |:Slib|

                                                            *symfony-:Sconfig*
:Sconfig [{name}]     Open config file.

                                                           *symfony-:SSconfig*
:SSconfig             Execute split and call |:Sconfig|

                                                           *symfony-:SVconfig*
:SVconfig             Execute vsplit and call |:Sconfig|
==============================================================================
REFACTORING                                              *symfony-refactoring*

If you select lines by visual-mode and call |:Spartial| with arguments, 
replace these lines to <php include_partial(arguments) ?> and create new file
and append these lines.
==============================================================================
SNIPPET                                                      *symfony-snippet*

Symfony.vim support snippetsEmu.vim. For example you type req and type 
g:snippetsEmu_key replace to $this->getRequestParameter().
If you want to know snippet, see after/ftplugin/symfony_snippets.vim
See also |symfony_snippets_emu|
==============================================================================
FuzzyFinder                                                      *symfony-fuf*

Symfony.vim support FuzzyFinder.vim. If you want to use, write 
'let g:symfony_fuf = 1' in your .vimrc. default is 0.  If this option is 
active, you can use these commands. See also |symfony_fuf|

:SmodelFinder         

:SviewFinder

:SformFinder

:SlibFinder

:SconfigFinder

:SactionFinder

:ShelperFinder
==============================================================================
AUTOCMD                                                      *symfony-autocmd*

If you want to use symfony autocmd, write like this.
autocmd User Symfony set -----
==============================================================================
FileType                                                    *symfony-filetype*

symfony.vim add filetype 'symfony', if find symfony project.  It supports 
snippets of snipMate.vim.

==============================================================================
OPTION                                                        *symfony-option*

                                                                 *symfony_fuf*
g:symfony_fuf            default is off. If you want to use fuzzyfinder,
                         turn on this option, write 'let g:symfony_fuf = 1'
                         in your .vimrc
                                                        *symfony_snippets_emu*
g:symfony_snippets_emu   default is off. If you want to use snippet by
                         snippetsEmu.vim, turn on this option, write 
                         'let g:symfony_snippets_emu = 1' in your .vimrc
==============================================================================
CHANGELOG                                                  *symfony-changelog*
0.04:
  - add fuzzyfinder interface
  - add filetype 'symfony'
  - add snippets of snipMate.vim
0.03:
  - Fix some bugs.
  - don't use sf_default_app
0.02:
  - Fix some bugs.
  - add detect when filetype is netrw and autocmd VimEnter
0.01:
  - First release.
==============================================================================
 vim:tw=78:ts=8:ft=help:norl:fdm=marker:
